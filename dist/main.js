/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderLists\": () => (/* binding */ renderLists),\n/* harmony export */   \"renderTaskCount\": () => (/* binding */ renderTaskCount),\n/* harmony export */   \"colorTasks\": () => (/* binding */ colorTasks),\n/* harmony export */   \"openOrCloseAddTaskForm\": () => (/* binding */ openOrCloseAddTaskForm),\n/* harmony export */   \"openOrCloseUpdateTaskForm\": () => (/* binding */ openOrCloseUpdateTaskForm),\n/* harmony export */   \"renderTasks\": () => (/* binding */ renderTasks),\n/* harmony export */   \"render\": () => (/* binding */ render),\n/* harmony export */   \"renderAndSave\": () => (/* binding */ renderAndSave),\n/* harmony export */   \"editTask\": () => (/* binding */ editTask),\n/* harmony export */   \"createList\": () => (/* binding */ createList),\n/* harmony export */   \"createTask\": () => (/* binding */ createTask),\n/* harmony export */   \"removeTask\": () => (/* binding */ removeTask),\n/* harmony export */   \"closeModal\": () => (/* binding */ closeModal)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar listsContainer = document.querySelector('[data-lists]');\nvar newListForm = document.querySelector('[data-new-list-form]');\nvar newListInput = document.querySelector('[data-new-list-input]');\nvar deleteListButton = document.querySelector('[data-delete-list-button]');\nvar listDisplayContainer = document.querySelector('[data-list-display-container]');\nvar listTitleElement = document.querySelector('[data-list-title]');\nvar listCountElement = document.querySelector('[data-list-count]');\nvar tasksContainer = document.querySelector('[data-tasks]');\nvar taskTemplate = document.querySelector('#task-template');\nvar newTaskForm = document.querySelector('[data-new-task-form]');\nvar newTaskInput = document.querySelector('[data-new-task-input]');\nvar newTaskDate = document.querySelector('#due-date');\nvar newTaskPriority = document.querySelector('#priority');\nvar newTaskDescription = document.querySelector('#description');\nvar clearCompleteTasksButton = document.querySelector('[data-clear-complete-tasks-button]');\nvar lists = JSON.parse(localStorage.getItem('task.lists')) || [];\nvar selectedListId = localStorage.getItem('task.selectedListId');\nvar overlay = document.querySelector('#overlay');\nvar formContainer = document.querySelector('.container');\nvar closeButton = document.querySelector('.close');\nvar addButton = document.querySelector('.add-btn');\nvar modalOpen = false; // localStorage.clear();\n\nvar clearElement = function clearElement(element) {\n  try {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  } catch (error) {\n    element = null;\n  }\n};\n\nvar renderLists = function renderLists() {\n  lists.forEach(function (list) {\n    var listElement = document.createElement('li');\n    listElement.innerText = list.name;\n    listElement.dataset.listId = list.id;\n\n    if (list.id === selectedListId) {\n      listElement.classList.add('active-list');\n    }\n\n    listsContainer.appendChild(listElement);\n  });\n};\n\nvar renderTaskCount = function renderTaskCount(selectedList) {\n  var incompleteTaskCount = selectedList.tasks.filter(function (task) {\n    return !task.complete;\n  }).length;\n  var taskString = incompleteTaskCount === 1 ? 'task' : 'tasks';\n  listCountElement.innerText = \"\".concat(incompleteTaskCount, \" \").concat(taskString, \" remaining\");\n};\n\nvar colorTasks = function colorTasks(selectedList) {\n  var todos = _toConsumableArray(document.querySelectorAll('.todo'));\n\n  var checkbox = _toConsumableArray(document.querySelectorAll('.checkbox'));\n\n  for (var i = 0; i < todos.length; i += 1) {\n    for (var _i = 0; _i < selectedList.tasks.length; _i += 1) {\n      if (selectedList.tasks[_i].priority === 'High') {\n        checkbox[_i].style.border = '4px solid #ed1250';\n      } else if (selectedList.tasks[_i].priority === 'Medium') {\n        checkbox[_i].style.border = '4px solid #d3d00f';\n      } else {\n        checkbox[_i].style.border = '4px solid #0fc53d';\n      }\n    }\n  }\n};\n\nvar openOrCloseAddTaskForm = function openOrCloseAddTaskForm() {\n  var h2 = document.querySelector('.container h2');\n  var submitInput = document.querySelector('input[type=\"submit\"]');\n\n  if (modalOpen) {\n    formContainer.style.pointerEvents = 'none';\n    formContainer.style.transform = 'scale(0)';\n    overlay.style.opacity = 0;\n    modalOpen = false;\n  } else {\n    h2.textContent = 'New Task';\n    submitInput.value = 'Submit';\n    formContainer.style.pointerEvents = 'auto';\n    formContainer.style.transform = 'scale(1)';\n    overlay.style.opacity = 1;\n    modalOpen = true;\n  }\n};\n\nvar openOrCloseUpdateTaskForm = function openOrCloseUpdateTaskForm() {\n  var h2 = document.querySelector('.container h2');\n  var submitInput = document.querySelector('input[type=\"submit\"]');\n\n  if (modalOpen) {\n    formContainer.style.pointerEvents = 'none';\n    formContainer.style.transform = 'scale(0)';\n    overlay.style.opacity = 0;\n    modalOpen = false;\n  } else {\n    h2.textContent = 'Update Task';\n    submitInput.value = 'Update';\n    formContainer.style.pointerEvents = 'auto';\n    formContainer.style.transform = 'scale(1)';\n    overlay.style.opacity = 1;\n    modalOpen = true;\n  }\n};\n\nvar renderTasks = function renderTasks(selectedList) {\n  if (selectedList.tasks.length === 0) {\n    listDisplayContainer.style.background = 'center no-repeat';\n    listDisplayContainer.style.backgroundSize = '35%';\n  } else {\n    listDisplayContainer.style.background = '';\n  }\n\n  selectedList.tasks.forEach(function (task) {\n    var taskElement = document.importNode(taskTemplate.content, true);\n    var checkbox = taskElement.querySelector('input');\n    checkbox.id = task.id;\n    checkbox.checked = task.complete;\n    var label = taskElement.querySelector('label');\n    label.htmlFor = task.id;\n    var lineBreak = document.createElement('br');\n    label.append(task.name, ', ', task.date, lineBreak, task.description);\n    var deleteTask = document.createElement('p');\n    deleteTask.innerHTML = '<i class=\"far fa-trash-alt\"></i>';\n    deleteTask.classList.add('removetask');\n    var editButton = document.createElement('p');\n    editButton.innerHTML = '<i class=\"far fa-edit\"></i>';\n    editButton.classList.add('edit'); // eslint-disable-next-line no-use-before-define\n\n    editButton.addEventListener('click', function () {\n      return editTask(task, label);\n    }); // eslint-disable-next-line no-use-before-define\n\n    deleteTask.addEventListener('click', function () {\n      return removeTask(task);\n    });\n    var todoTask = taskElement.querySelector('.task');\n    todoTask.append(deleteTask);\n    todoTask.append(editButton);\n    tasksContainer.appendChild(taskElement);\n  });\n};\n\nvar render = function render() {\n  clearElement(listsContainer);\n  renderLists();\n  var selectedList = lists.find(function (list) {\n    return list.id === selectedListId;\n  });\n\n  try {\n    if (selectedListId === null) {\n      listDisplayContainer.style.display = 'none';\n    } else {\n      listDisplayContainer.style.display = '';\n      listTitleElement.innerHTML = \"\".concat(selectedList.name);\n      renderTaskCount(selectedList);\n      clearElement(tasksContainer);\n      renderTasks(selectedList);\n      colorTasks(selectedList);\n    }\n  } catch (error) {\n    listDisplayContainer === null;\n  }\n};\n\nvar renderAndSave = function renderAndSave() {\n  render();\n  localStorage.setItem('task.lists', JSON.stringify(lists));\n  localStorage.setItem('task.selectedListId', selectedListId);\n};\n\nvar editTask = function editTask(task, label) {\n  openOrCloseUpdateTaskForm();\n  newTaskInput.value = task.name;\n  newTaskDate.value = task.date;\n  newTaskPriority.value = task.priority;\n  newTaskDescription.value = task.description;\n  newTaskForm.addEventListener('submit', function () {\n    task.name = newTaskInput.value;\n    task.date = newTaskDate.value;\n    task.priority = newTaskPriority.value;\n    task.description = newTaskDescription.value;\n    label.innerHTML = \"<span class=\\\"checkbox\\\"></span>\".concat(task.name, \"<br>\").concat(task.date, \"<br>\").concat(task.description);\n    renderAndSave();\n  });\n};\n\nvar createList = function createList() {\n  return {\n    id: Date.now().toString(),\n    name: newListInput.value,\n    tasks: []\n  };\n};\n\nvar createTask = function createTask() {\n  return {\n    id: Date.now().toString(),\n    name: newTaskInput.value,\n    date: newTaskDate.value,\n    priority: newTaskPriority.value,\n    description: newTaskDescription.value,\n    complete: false\n  };\n};\n\nwindow.onload = function () {\n  newListForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    var listName = newListInput.value;\n\n    if (listName === null || listName === '') {\n      return;\n    }\n\n    var list = createList();\n    newListInput.value = null;\n    lists.push(list);\n    renderAndSave();\n  });\n};\n\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  listsContainer.addEventListener('click', function (e) {\n    if (e.target.tagName.toLowerCase() === 'li') {\n      selectedListId = e.target.dataset.listId;\n      renderAndSave();\n    }\n  });\n});\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  deleteListButton.addEventListener('click', function () {\n    lists = lists.filter(function (list) {\n      return list.id !== selectedListId;\n    });\n    selectedListId = null;\n    renderAndSave();\n  });\n});\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  newTaskForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    var taskName = newTaskInput.value;\n    var h2 = document.querySelector('.container h2');\n    if (h2.textContent === 'Update Task') return;\n    if (taskName === null || taskName === '') return;\n    var task = createTask();\n    newTaskInput.value = null;\n    var selectedList = lists.find(function (list) {\n      return list.id === selectedListId;\n    });\n    selectedList.tasks.push(task);\n    renderAndSave();\n  });\n});\n\nvar removeTask = function removeTask(task) {\n  var selectedList = lists.find(function (list) {\n    return list.id === selectedListId;\n  });\n  var taskElement = document.importNode(taskTemplate.content, true);\n  var checkbox = taskElement.querySelector('input');\n  checkbox.id = task.id;\n  checkbox.checked = task.complete;\n  task.complete = true;\n  selectedList.tasks = selectedList.tasks.filter(function (task) {\n    return !task.complete;\n  });\n  renderAndSave();\n};\n\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  clearCompleteTasksButton.addEventListener('click', function () {\n    var selectedList = lists.find(function (list) {\n      return list.id === selectedListId;\n    });\n    selectedList.tasks = selectedList.tasks.filter(function (task) {\n      return !task.complete;\n    });\n    renderAndSave();\n  });\n});\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  tasksContainer.addEventListener('click', function (e) {\n    if (e.target.tagName.toLowerCase() === 'input') {\n      var selectedList = lists.find(function (list) {\n        return list.id === selectedListId;\n      });\n      var selectedTask = selectedList.tasks.find(function (task) {\n        return task.id === e.target.id;\n      });\n      selectedTask.complete = e.target.checked;\n      renderAndSave();\n    }\n  });\n});\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  addButton.addEventListener('click', function () {\n    newTaskForm.reset();\n    openOrCloseAddTaskForm();\n\n    if (modalOpen) {\n      addButton.style.background = '#2185d5';\n      addButton.style.transform = 'rotate(45deg)';\n    } else {\n      addButton.style.background = 'transparent';\n      addButton.style.transform = 'rotate(0)';\n    }\n  });\n});\n\nvar closeModal = function closeModal() {\n  formContainer.style.transform = 'scale(0)';\n  overlay.style.opacity = 0;\n  modalOpen = false;\n};\n\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  closeButton.addEventListener('click', function () {\n    closeModal();\n    addButton.style.background = 'transparent';\n    addButton.style.transform = 'rotate(0)';\n  });\n});\nwindow.addEventListener('DOMContentLoaded', function (e) {\n  formContainer.addEventListener('submit', function (e) {\n    e.preventDefault();\n    openOrCloseAddTaskForm();\n    addButton.style.background = 'transparent';\n    addButton.style.transform = 'rotate(0)';\n    modalOpen = false;\n  });\n});\nrender();\n\n\n//# sourceURL=webpack://todolist/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;