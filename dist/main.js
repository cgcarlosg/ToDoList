/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const allButton = document.querySelector(\"#All-button\");\r\nconst todayButton = document.querySelector(\"#top-btn\");\r\nconst urgentButton = document.querySelector(\"#normal-btn\");\r\nconst lessButton = document.querySelector(\"#less-btn\");\r\nconst titleTask = document.querySelector(\"#project-name\");\r\nconst taskInputContainer = document.querySelector(\"#input-container\");\r\nconst taskInput = document.querySelector(\"#task-input\");\r\nconst taskButton = document.querySelector(\"#add-task-input-button\");\r\nconst projTaskButton = document.querySelector(\"#add-proj-task-input-button\");\r\nconst deleteProjectButton = document.querySelector(\"#delete-proj-button\");\r\nconst sidebarDiv = document.querySelector(\"#sidebar\");\r\nconst tasksDiv = document.querySelector(\"#tasks\");\r\nconst projectButtons = document.querySelector(\"#projects-buttons\");\r\nconst newProjectButton = document.querySelector(\"#add-project-input-button\");\r\n\r\nprojTaskButton.style.display = \"none\";\r\ndeleteProjectButton.style.display = \"none\";\r\nallButton.addEventListener(\"click\", switchList);\r\ntodayButton.addEventListener(\"click\", switchList);\r\nurgentButton.addEventListener(\"click\", switchList);\r\nlessButton.addEventListener('click', switchList)\r\nnewProjectButton.addEventListener(\"click\", addNewProject);\r\n\r\nlet allTasks = [];\r\nlet todaysTasks = [];\r\nlet urgentTasks = [];\r\nlet taskID = 1;\r\nlet projectObject = {};\r\nlet projID = 1;\r\n\r\n// task factory\r\nconst task = () => {\r\n    if (taskInput.value.length < 1){\r\n        \r\n        return false;\r\n    }\r\n    let name = taskInput.value;\r\n    let id = taskID\r\n    const today = new Date().toISOString().slice(0,10);\r\n    let newTask = {\r\n        name: name,\r\n        id: id,\r\n        date:  today,\r\n        status: \"todo\",\r\n        urgency: \"not\"\r\n    }\r\n    taskID ++;\r\n    allTasks.push(newTask);\r\n    addTaskToList(name, id)\r\n}\r\n\r\nfunction addTaskToList(task, id){\r\n    let newTask = document.createElement(\"div\");\r\n        newTask.classList.add(\"new-task-container\");\r\n        newTask.id = id;\r\n        let _id = id\r\n        let newTaskLeft = document.createElement(\"div\");\r\n            newTaskLeft.classList.add(\"task-container-left\");\r\n            let newTaskTitle = document.createElement(\"div\");\r\n                newTaskTitle.innerHTML = task;\r\n                newTaskTitle.classList.add(\"task-div\");\r\n            let newTaskCheck = document.createElement(\"div\");\r\n                newTaskCheck.innerHTML = \"🔘\";\r\n                newTaskCheck.classList.add(\"task-div-check\");\r\n                newTaskCheck.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    if (this.innerHTML == \"🔘\"){\r\n                        this.innerHTML = \"✔️\";\r\n                        item.status = \"completed\";\r\n                        updateLists();\r\n                    } else {\r\n                        this.innerHTML = \"🔘\";\r\n                        item.status = \"todo\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let editTaskButton = document.createElement(\"button\");\r\n                editTaskButton.innerHTML = \"✎\"\r\n                editTaskButton.classList.add(\"task-edit-button\");\r\n                editTaskButton.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    let editTaskClose = document.createElement(\"button\");\r\n                        editTaskClose.innerHTML = \"✎\"\r\n                        editTaskClose.classList.add(\"task-edit-button\");\r\n                        editTaskClose.addEventListener(\"click\", function(){\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                        newTaskLeft.appendChild(editTaskClose);\r\n                    let editTaskName = document.createElement(\"input\")\r\n                        editTaskName.classList.add(\"edit-task-input\");\r\n                        editTaskName.type = \"text\";\r\n                        editTaskName.value = item.name\r\n                    let editTaskSave = document.createElement(\"button\");\r\n                        editTaskSave.innerHTML = \"save\";\r\n                        editTaskSave.classList.add(\"task-edit-button\");\r\n                        newTaskLeft.appendChild(editTaskName);\r\n                        newTaskLeft.appendChild(editTaskSave);\r\n                        newTaskTitle.style.display = \"none\";\r\n                        newTaskCheck.style.display = \"none\";\r\n                        editTaskButton.style.display = \"none\";\r\n                        editTaskSave.addEventListener(\"click\", function(){\r\n                            item.name = editTaskName.value;\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            newTaskTitle.innerHTML = editTaskName.value;\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                })\r\n        newTaskLeft.appendChild(editTaskButton); \r\n        newTaskLeft.appendChild(newTaskTitle); \r\n        newTaskLeft.appendChild(newTaskCheck); \r\n\r\n        let newTaskRight = document.createElement(\"div\");\r\n            newTaskRight.classList.add(\"task-container-right\");\r\n            let flagTaskButton = document.createElement(\"button\");\r\n                flagTaskButton.innerHTML = \"⚑\"\r\n                flagTaskButton.classList.add(\"task-flag-button\");\r\n                flagTaskButton.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    if (item.urgency == \"not\"){\r\n                        flagTaskButton.style.cssText = \"color: var(--cancelRed);\"\r\n                        item.urgency = \"urgent\";\r\n                        updateLists();\r\n                    } else {\r\n                        flagTaskButton.style.removeProperty(\"color\");\r\n                        item.urgency = \"not\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let dateInput = document.createElement(\"input\");\r\n                dateInput.classList.add(\"task-input\");\r\n                dateInput.type = \"date\";\r\n                dateInput.addEventListener(\"change\", function(){\r\n                    var input = this.value;\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    item.date = input;\r\n                    updateLists();\r\n                })\r\n            let newTaskClear = document.createElement(\"div\");\r\n                newTaskClear.innerHTML = \"❌\";\r\n                newTaskClear.classList.add(\"task-div-check\");\r\n                newTaskClear.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    var index = allTasks.indexOf(item)\r\n                    allTasks.splice(index, 1);\r\n                    newTaskClear.parentElement.parentElement.remove();\r\n                    updateLists();\r\n                })\r\n            newTaskRight.appendChild(flagTaskButton);\r\n            newTaskRight.appendChild(dateInput);\r\n            newTaskRight.appendChild(newTaskClear); \r\n        newTask.appendChild(newTaskLeft); \r\n        newTask.appendChild(newTaskRight); \r\n    tasksDiv.appendChild(newTask);\r\n    taskInput.value = \"\";\r\n    updateLists();\r\n}\r\n\r\n// update task lists\r\nfunction updateLists() {\r\n    todaysTasks.splice(0, todaysTasks.length);\r\n    urgentTasks.splice(0, urgentTasks.length);\r\n    const today = new Date().toISOString().slice(0,10);\r\n    for (var i = 0; i < allTasks.length; i++){\r\n        if (allTasks[i][\"date\"] == today){\r\n            todaysTasks.push(allTasks[i])\r\n        }\r\n        if (allTasks[i][\"urgency\"] == \"urgent\"){\r\n            urgentTasks.push(allTasks[i])\r\n        }\r\n    }\r\n}\r\n\r\n// switch lists - normal\r\n\r\nfunction switchList(e){\r\n    if (e == undefined){\r\n        var currentList = \"All\"\r\n    }else{\r\n        var currentList = e.target.innerHTML;\r\n    }\r\n    titleTask.innerHTML = currentList;\r\n    while (tasksDiv.firstChild) {\r\n        tasksDiv.removeChild(tasksDiv.firstChild);\r\n    }\r\n    if (currentList == \"All\"){\r\n        populateList(allTasks);\r\n        changeButton(currentList);\r\n        taskButton.style.removeProperty(\"display\");\r\n        projTaskButton.style.display = \"none\";\r\n        deleteProjectButton.style.display = \"none\";\r\n    } else if (currentList == \"Today\"){\r\n        populateList(todaysTasks);\r\n        changeButton(currentList);\r\n        taskButton.style.removeProperty(\"display\");\r\n        projTaskButton.style.display = \"none\";\r\n        deleteProjectButton.style.display = \"none\";\r\n    } else if (currentList == \"Urgent\"){\r\n        populateList(urgentTasks);\r\n        changeButton(currentList);\r\n        taskButton.style.removeProperty(\"display\");\r\n        projTaskButton.style.display = \"none\";\r\n        deleteProjectButton.style.display = \"none\";\r\n    }\r\n}\r\n\r\n// populate lists\r\n\r\nfunction populateList (list) {\r\n    list.forEach(element => {\r\n        let newTask = document.createElement(\"div\");\r\n        newTask.classList.add(\"new-task-container\");\r\n        newTask.id = element.id;\r\n        let _id = element.id\r\n        let newTaskLeft = document.createElement(\"div\");\r\n            newTaskLeft.classList.add(\"task-container-left\");\r\n            let newTaskTitle = document.createElement(\"div\");\r\n                newTaskTitle.innerHTML = element.name;\r\n                newTaskTitle.classList.add(\"task-div\");\r\n            let newTaskCheck = document.createElement(\"div\");\r\n                if (element.status == \"completed\"){\r\n                    newTaskCheck.innerHTML = \"✔️\";\r\n                } else {\r\n                    newTaskCheck.innerHTML = \"🔘\";\r\n                }\r\n                newTaskCheck.classList.add(\"task-div-check\");\r\n                newTaskCheck.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    if (this.innerHTML == \"🔘\"){\r\n                        this.innerHTML = \"✔️\";\r\n                        item.status = \"completed\";\r\n                        updateLists();\r\n                    } else {\r\n                        this.innerHTML = \"🔘\";\r\n                        item.status = \"todo\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let editTaskButton = document.createElement(\"button\");\r\n                editTaskButton.innerHTML = \"✎\"\r\n                editTaskButton.classList.add(\"task-edit-button\");\r\n                editTaskButton.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    let editTaskClose = document.createElement(\"button\");\r\n                        editTaskClose.innerHTML = \"✎\"\r\n                        editTaskClose.classList.add(\"task-edit-button\");\r\n                        editTaskClose.addEventListener(\"click\", function(){\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                        newTaskLeft.appendChild(editTaskClose);\r\n                    let editTaskName = document.createElement(\"input\")\r\n                        editTaskName.classList.add(\"edit-task-input\");\r\n                        editTaskName.type = \"text\";\r\n                        editTaskName.value = item.name\r\n                    let editTaskSave = document.createElement(\"button\");\r\n                        editTaskSave.innerHTML = \"save\";\r\n                        editTaskSave.classList.add(\"task-edit-button\");\r\n                        newTaskLeft.appendChild(editTaskName);\r\n                        newTaskLeft.appendChild(editTaskSave);\r\n                        newTaskTitle.style.display = \"none\";\r\n                        newTaskCheck.style.display = \"none\";\r\n                        editTaskButton.style.display = \"none\";\r\n                        editTaskSave.addEventListener(\"click\", function(){\r\n                            item.name = editTaskName.value;\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            newTaskTitle.innerHTML = editTaskName.value;\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                })\r\n        newTaskLeft.appendChild(editTaskButton); \r\n        newTaskLeft.appendChild(newTaskTitle); \r\n        newTaskLeft.appendChild(newTaskCheck); \r\n\r\n        let newTaskRight = document.createElement(\"div\");\r\n            newTaskRight.classList.add(\"task-container-right\");\r\n            let flagTaskButton = document.createElement(\"button\");\r\n                flagTaskButton.innerHTML = \"⚑\"\r\n                flagTaskButton.classList.add(\"task-flag-button\");\r\n                if (element.urgency == \"urgent\"){\r\n                    flagTaskButton.style.cssText = \"color: var(--cancelRed);\"\r\n                } else {\r\n                    flagTaskButton.style.removeProperty(\"color\");\r\n                }\r\n                flagTaskButton.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    if (item.urgency == \"not\"){\r\n                        flagTaskButton.style.cssText = \"color: var(--cancelRed);\"\r\n                        item.urgency = \"urgent\";\r\n                        updateLists();\r\n                    } else {\r\n                        flagTaskButton.style.removeProperty(\"color\");\r\n                        item.urgency = \"not\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let dateInput = document.createElement(\"input\");\r\n                dateInput.classList.add(\"task-input\");\r\n                dateInput.type = \"date\";\r\n                dateInput.value = element.date;\r\n                dateInput.addEventListener(\"change\", function(){\r\n                    var input = this.value;\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    item.date = input;\r\n                    updateLists();\r\n                })\r\n            let newTaskClear = document.createElement(\"div\");\r\n                newTaskClear.innerHTML = \"❌\";\r\n                newTaskClear.classList.add(\"task-div-check\");\r\n                newTaskClear.addEventListener(\"click\", function(){\r\n                    var item = allTasks.find( ({id}) => id === _id);\r\n                    var index = allTasks.indexOf(item)\r\n                    allTasks.splice(index, 1);\r\n                    newTaskClear.parentElement.parentElement.remove();\r\n                    updateLists();\r\n                })\r\n            newTaskRight.appendChild(flagTaskButton);\r\n            newTaskRight.appendChild(dateInput);\r\n            newTaskRight.appendChild(newTaskClear); \r\n        newTask.appendChild(newTaskLeft); \r\n        newTask.appendChild(newTaskRight); \r\n    tasksDiv.appendChild(newTask);\r\n    taskInput.value = \"\";\r\n    updateLists();\r\n    });\r\n}\r\n\r\n// PROJECTS\r\n\r\n// switch lists - project\r\n\r\nfunction switchListProj(e){\r\n    var currentList = e.target.innerText;\r\n    titleTask.innerHTML = currentList;\r\n    while (tasksDiv.firstChild) {\r\n        tasksDiv.removeChild(tasksDiv.firstChild);\r\n    }\r\n    if (currentList in projectObject){\r\n        populateProjectsList(projectObject[currentList], currentList);\r\n        changeButton(currentList);\r\n        projTaskButton.style.removeProperty(\"display\");\r\n        deleteProjectButton.style.removeProperty(\"display\");\r\n        taskButton.style.display = \"none\";\r\n    }\r\n}\r\n\r\n// populate lists - project\r\n\r\nfunction populateProjectsList (list, arrayName) {\r\n    let arr = projectObject[arrayName];\r\n    list.forEach(element => {\r\n        let newTask = document.createElement(\"div\");\r\n        newTask.classList.add(\"new-task-container\");\r\n        newTask.id = element.id;\r\n        let _id = element.id\r\n        let newTaskLeft = document.createElement(\"div\");\r\n            newTaskLeft.classList.add(\"task-container-left\");\r\n            let newTaskTitle = document.createElement(\"div\");\r\n                newTaskTitle.innerHTML = element.name;\r\n                newTaskTitle.classList.add(\"task-div\");\r\n            let newTaskCheck = document.createElement(\"div\");\r\n                if (element.status == \"completed\"){\r\n                    newTaskCheck.innerHTML = \"✔️\";\r\n                } else {\r\n                    newTaskCheck.innerHTML = \"🔘\";\r\n                }\r\n                newTaskCheck.classList.add(\"task-div-check\");\r\n                newTaskCheck.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    if (this.innerHTML == \"🔘\"){\r\n                        this.innerHTML = \"✔️\";\r\n                        item.status = \"completed\";\r\n                        updateLists();\r\n                    } else {\r\n                        this.innerHTML = \"🔘\";\r\n                        item.status = \"todo\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let editTaskButton = document.createElement(\"button\");\r\n                editTaskButton.innerHTML = \"✎\"\r\n                editTaskButton.classList.add(\"task-edit-button\");\r\n                editTaskButton.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    let editTaskClose = document.createElement(\"button\");\r\n                        editTaskClose.innerHTML = \"✎\"\r\n                        editTaskClose.classList.add(\"task-edit-button\");\r\n                        editTaskClose.addEventListener(\"click\", function(){\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                        newTaskLeft.appendChild(editTaskClose);\r\n                    let editTaskName = document.createElement(\"input\")\r\n                        editTaskName.classList.add(\"edit-task-input\");\r\n                        editTaskName.type = \"text\";\r\n                        editTaskName.value = item.name\r\n                    let editTaskSave = document.createElement(\"button\");\r\n                        editTaskSave.innerHTML = \"save\";\r\n                        editTaskSave.classList.add(\"task-edit-button\");\r\n                        newTaskLeft.appendChild(editTaskName);\r\n                        newTaskLeft.appendChild(editTaskSave);\r\n                        newTaskTitle.style.display = \"none\";\r\n                        newTaskCheck.style.display = \"none\";\r\n                        editTaskButton.style.display = \"none\";\r\n                        editTaskSave.addEventListener(\"click\", function(){\r\n                            item.name = editTaskName.value;\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            newTaskTitle.innerHTML = editTaskName.value;\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                })\r\n        newTaskLeft.appendChild(editTaskButton); \r\n        newTaskLeft.appendChild(newTaskTitle); \r\n        newTaskLeft.appendChild(newTaskCheck); \r\n\r\n        let newTaskRight = document.createElement(\"div\");\r\n            newTaskRight.classList.add(\"task-container-right\");\r\n            let flagTaskButton = document.createElement(\"button\");\r\n                flagTaskButton.innerHTML = \"⚑\"\r\n                flagTaskButton.classList.add(\"task-flag-button\");\r\n                if (element.urgency == \"urgent\"){\r\n                    flagTaskButton.style.cssText = \"color: var(--cancelRed);\"\r\n                } else {\r\n                    flagTaskButton.style.removeProperty(\"color\");\r\n                }\r\n                flagTaskButton.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    if (item.urgency == \"not\"){\r\n                        flagTaskButton.style.cssText = \"color: var(--cancelRed);\"\r\n                        item.urgency = \"urgent\";\r\n                        updateLists();\r\n                    } else {\r\n                        flagTaskButton.style.removeProperty(\"color\");\r\n                        item.urgency = \"not\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let dateInput = document.createElement(\"input\");\r\n                dateInput.classList.add(\"task-input\");\r\n                dateInput.type = \"date\";\r\n                dateInput.value = element.date;\r\n                dateInput.addEventListener(\"change\", function(){\r\n                    var input = this.value;\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    item.date = input;\r\n                    updateLists();\r\n                })\r\n            let newTaskClear = document.createElement(\"div\");\r\n                newTaskClear.innerHTML = \"❌\";\r\n                newTaskClear.classList.add(\"task-div-check\");\r\n                newTaskClear.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    var index = arr.indexOf(item);\r\n                    arr.splice(index, 1);\r\n                    newTaskClear.parentElement.parentElement.remove();\r\n                    updateLists();\r\n                })\r\n            newTaskRight.appendChild(flagTaskButton);\r\n            newTaskRight.appendChild(dateInput);\r\n            newTaskRight.appendChild(newTaskClear); \r\n        newTask.appendChild(newTaskLeft); \r\n        newTask.appendChild(newTaskRight); \r\n    tasksDiv.appendChild(newTask);\r\n    taskInput.value = \"\";\r\n    updateLists();\r\n    });\r\n}\r\n\r\n// project task factory\r\nconst projectTask = () => {\r\n    let arrayName = titleTask.innerHTML;\r\n    if (taskInput.value.length < 1){\r\n        alert(\"task is empty, add text\")\r\n        return\r\n    }\r\n    let name = taskInput.value;\r\n    let id = taskID\r\n    const today = new Date().toISOString().slice(0,10);\r\n    let newTask = {\r\n        name: name,\r\n        id: id,\r\n        date:  today,\r\n        status: \"todo\",\r\n        urgency: \"not\",\r\n        project: arrayName\r\n    }\r\n    taskID ++;\r\n    projectObject[arrayName].push(newTask);\r\n    addProjTaskToList(name, id, arrayName)\r\n}\r\n\r\n// add new project\r\n\r\nfunction addNewProject() {\r\n    newProjectButton.style.display = \"none\";\r\n    let projectsInputContainer = document.createElement(\"div\");\r\n        projectsInputContainer.classList.add(\"project-input-container\");\r\n        let projectsInput = document.createElement(\"input\");\r\n            projectsInput.classList.add(\"project-input\");\r\n            projectsInput.id = \"button-input\";\r\n            projectsInput.type = \"text\";\r\n            projectsInput.placeholder = \"new project\";\r\n        projectsInputContainer.appendChild(projectsInput);\r\n        let projButtonContainer = document.createElement(\"div\");\r\n        projButtonContainer.classList.add(\"add-proj-button-container\")\r\n            let addButton = document.createElement(\"button\");\r\n                addButton.classList.add(\"add-proj-button\");\r\n                addButton.innerHTML = \"add\";\r\n                addButton.addEventListener(\"click\", function(){\r\n                    let newProjectName = projectsInput.value;\r\n                    if (newProjectName in projectObject){\r\n                        alert(\"Already a project with that name, try another name\");\r\n                        return;\r\n                    }\r\n                    let newProjectArray = [];\r\n                    projectObject[newProjectName] = newProjectArray;\r\n                    let newProjectButtonToAdd = document.createElement(\"button\");\r\n                        newProjectButtonToAdd.innerHTML = newProjectName;\r\n                        newProjectButtonToAdd.classList.add(\"sidebar-button\");\r\n                        newProjectButtonToAdd.addEventListener(\"click\", switchListProj);\r\n                        newProjectButtonToAdd.id = newProjectName + \"-button\";\r\n                    projectButtons.appendChild(newProjectButtonToAdd);\r\n                    addButton.parentElement.parentElement.remove();\r\n                    newProjectButton.style.removeProperty(\"display\");\r\n                })\r\n            let cancelButton = document.createElement(\"button\");\r\n                cancelButton.classList.add(\"cancel-proj-button\");\r\n                cancelButton.innerHTML = \"cancel\";\r\n                cancelButton.addEventListener(\"click\", function(){\r\n                    cancelButton.parentElement.parentElement.remove();\r\n                    newProjectButton.style.removeProperty(\"display\");\r\n                })\r\n            projButtonContainer.appendChild(addButton);\r\n            projButtonContainer.appendChild(cancelButton);\r\n        projectsInputContainer.appendChild(projButtonContainer);\r\n    sidebarDiv.appendChild(projectsInputContainer);\r\n}\r\n\r\n// add project task to project list\r\n\r\nfunction addProjTaskToList(task, id, arrayName){\r\n    let newTask = document.createElement(\"div\");\r\n        newTask.classList.add(\"new-task-container\");\r\n        newTask.id = arrayName;\r\n        let _id = id\r\n        let arr = projectObject[arrayName];\r\n        let newTaskLeft = document.createElement(\"div\");\r\n            newTaskLeft.classList.add(\"task-container-left\");\r\n            let newTaskTitle = document.createElement(\"div\");\r\n                newTaskTitle.innerHTML = task;\r\n                newTaskTitle.classList.add(\"task-div\");\r\n            let newTaskCheck = document.createElement(\"div\");\r\n                newTaskCheck.innerHTML = \"🔘\";\r\n                newTaskCheck.classList.add(\"task-div-check\");\r\n                newTaskCheck.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    if (this.innerHTML == \"🔘\"){\r\n                        this.innerHTML = \"✔️\";\r\n                        item.status = \"completed\";\r\n                        updateLists();\r\n                    } else {\r\n                        this.innerHTML = \"🔘\";\r\n                        item.status = \"todo\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let editTaskButton = document.createElement(\"button\");\r\n                editTaskButton.innerHTML = \"✎\"\r\n                editTaskButton.classList.add(\"task-edit-button\");\r\n                editTaskButton.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    let editTaskClose = document.createElement(\"button\");\r\n                        editTaskClose.innerHTML = \"✎\"\r\n                        editTaskClose.classList.add(\"task-edit-button\");\r\n                        editTaskClose.addEventListener(\"click\", function(){\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                        newTaskLeft.appendChild(editTaskClose);\r\n                    let editTaskName = document.createElement(\"input\")\r\n                        editTaskName.classList.add(\"edit-task-input\");\r\n                        editTaskName.type = \"text\";\r\n                        editTaskName.value = item.name\r\n                    let editTaskSave = document.createElement(\"button\");\r\n                        editTaskSave.innerHTML = \"save\";\r\n                        editTaskSave.classList.add(\"task-edit-button\");\r\n                        newTaskLeft.appendChild(editTaskName);\r\n                        newTaskLeft.appendChild(editTaskSave);\r\n                        newTaskTitle.style.display = \"none\";\r\n                        newTaskCheck.style.display = \"none\";\r\n                        editTaskButton.style.display = \"none\";\r\n                        editTaskSave.addEventListener(\"click\", function(){\r\n                            item.name = editTaskName.value;\r\n                            console.log(item)\r\n                            newTaskTitle.style.display = \"flex\";\r\n                            newTaskCheck.style.display = \"flex\";\r\n                            editTaskButton.style.display = \"flex\";\r\n                            newTaskTitle.innerHTML = editTaskName.value;\r\n                            editTaskName.remove();\r\n                            editTaskSave.remove();\r\n                            editTaskClose.remove();\r\n                            updateLists();\r\n                        })\r\n                })\r\n        newTaskLeft.appendChild(editTaskButton); \r\n        newTaskLeft.appendChild(newTaskTitle); \r\n        newTaskLeft.appendChild(newTaskCheck); \r\n\r\n        let newTaskRight = document.createElement(\"div\");\r\n            newTaskRight.classList.add(\"task-container-right\");\r\n            let flagTaskButton = document.createElement(\"button\");\r\n                flagTaskButton.innerHTML = \"⚑\"\r\n                flagTaskButton.classList.add(\"task-flag-button\");\r\n                flagTaskButton.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    if (item.urgency == \"not\"){\r\n                        flagTaskButton.style.cssText = \"color: var(--cancelRed);\"\r\n                        item.urgency = \"urgent\";\r\n                        updateLists();\r\n                    } else {\r\n                        flagTaskButton.style.removeProperty(\"color\");\r\n                        item.urgency = \"not\";\r\n                        updateLists();\r\n                    }\r\n                })\r\n            let dateInput = document.createElement(\"input\");\r\n                dateInput.classList.add(\"task-input\");\r\n                dateInput.type = \"date\";\r\n                dateInput.addEventListener(\"change\", function(){\r\n                    var input = this.value;\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    item.date = input;\r\n                    updateLists();\r\n                })\r\n            let newTaskClear = document.createElement(\"div\");\r\n                newTaskClear.innerHTML = \"❌\";\r\n                newTaskClear.classList.add(\"task-div-check\");\r\n                newTaskClear.addEventListener(\"click\", function(){\r\n                    var item = arr.find( ({id}) => id === _id);\r\n                    var index = arr.indexOf(item)\r\n                    arr.splice(index, 1);\r\n                    newTaskClear.parentElement.parentElement.remove();\r\n                    updateLists();\r\n                })\r\n            newTaskRight.appendChild(flagTaskButton);\r\n            newTaskRight.appendChild(dateInput);\r\n            newTaskRight.appendChild(newTaskClear); \r\n        newTask.appendChild(newTaskLeft); \r\n        newTask.appendChild(newTaskRight); \r\n    tasksDiv.appendChild(newTask);\r\n    taskInput.value = \"\";\r\n    updateLists();\r\n}\r\n\r\nfunction changeButton (currentList){\r\n    var buttons = document.querySelectorAll(\"button\");\r\n    buttons.forEach(button => {\r\n        if (button.id == currentList + \"-button\"){\r\n            button.style.cssText = \"background-color: var(--tasklist);\"\r\n        } else {\r\n            button.style.removeProperty(\"background-color\")\r\n        }\r\n    })\r\n}\r\n\r\ntaskButton.addEventListener(\"click\", task);\r\nprojTaskButton.addEventListener(\"click\", projectTask);\r\ndeleteProjectButton.addEventListener(\"click\", deleteProject);\r\n\r\nfunction deleteProject () {\r\n    if (document.querySelector('#confirmation-div') !== null){\r\n        return;\r\n    }\r\n    var projToDelete = titleTask.innerHTML;\r\n    var confirmationDiv = document.createElement(\"div\");\r\n        confirmationDiv.id = \"confirmation-div\"\r\n        confirmationDiv.innerHTML = \"are you sure?\";\r\n        var yesButton = document.createElement(\"button\");\r\n            yesButton.innerHTML = \"yes\";\r\n            yesButton.classList.add(\"yes-button\");\r\n            yesButton.addEventListener(\"click\", function(){\r\n                if(projToDelete in projectObject){\r\n                    var buttons = document.querySelectorAll(\"button\");\r\n                    buttons.forEach(button => {\r\n                        if (button.id == projToDelete + \"-button\"){\r\n                            button.remove();\r\n                        }\r\n                    })\r\n                    delete projectObject[projToDelete];\r\n                    switchList();\r\n                    noButton.remove();\r\n                    yesButton.remove();\r\n                    confirmationDiv.remove();\r\n                }\r\n            })\r\n        var noButton = document.createElement(\"button\");\r\n            noButton.innerHTML = \"no\";\r\n            noButton.classList.add(\"no-button\");\r\n            noButton.addEventListener(\"click\", function(){\r\n                noButton.remove();\r\n                yesButton.remove();\r\n                confirmationDiv.remove();\r\n            })\r\n        confirmationDiv.appendChild(yesButton);\r\n        confirmationDiv.appendChild(noButton);\r\n    taskInputContainer.appendChild(confirmationDiv);\r\n}\n\n//# sourceURL=webpack://todolist/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;